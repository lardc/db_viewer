<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Applicability" xml:space="preserve">
    <value>Element applicability {0} {1}</value>
  </data>
  <data name="Assembly" xml:space="preserve">
    <value>Assembly</value>
  </data>
  <data name="Authenticate" xml:space="preserve">
    <value>Authenticate</value>
  </data>
  <data name="Authentication" xml:space="preserve">
    <value>Authentication</value>
  </data>
  <data name="CreateLinksBetweenElementsAndPackages" xml:space="preserve">
    <value>Create links between elements and packages</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Element" xml:space="preserve">
    <value>Element</value>
  </data>
  <data name="Element2" xml:space="preserve">
    <value>Element2</value>
  </data>
  <data name="FalseToString" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="GroupName" xml:space="preserve">
    <value>GroupName</value>
  </data>
  <data name="GroupNameIsNotValid" xml:space="preserve">
    <value>GroupName is not valid</value>
  </data>
  <data name="GroupNameNotSelected" xml:space="preserve">
    <value>GroupName not selected. Please select GroupName.</value>
  </data>
  <data name="ListDataNotCreated" xml:space="preserve">
    <value>The data list was not created</value>
  </data>
  <data name="OldSerialNum" xml:space="preserve">
    <value>Old serial number</value>
  </data>
  <data name="NewPackage" xml:space="preserve">
    <value>Package (new)</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="OldSerialNumIsNotFound" xml:space="preserve">
    <value>Old serial number is not found.</value>
  </data>
  <data name="OperationError" xml:space="preserve">
    <value>Operation error</value>
  </data>
  <data name="Package" xml:space="preserve">
    <value>Package</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PasswordIncorrect" xml:space="preserve">
    <value>The password is incorrect</value>
  </data>
  <data name="PasswordIsIncorrect" xml:space="preserve">
    <value>The password is incorrect or the DC user '{0}' does not exist</value>
  </data>
  <data name="Pieces" xml:space="preserve">
    <value>pieces</value>
  </data>
  <data name="QtyReleased" xml:space="preserve">
    <value>Quantity released by Job {0} {1}</value>
  </data>
  <data name="RealisationError" xml:space="preserve">
    <value>Error in the implementation of '{0}'. Contact the developer</value>
  </data>
  <data name="CreatedLinksTotal" xml:space="preserve">
    <value>Total links {0} {1}</value>
  </data>
  <data name="Relabeling" xml:space="preserve">
    <value>Relabeling</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SerialNumIsNotValid" xml:space="preserve">
    <value>Package serial number is not valid. It is already used.</value>
  </data>
  <data name="SetValue" xml:space="preserve">
    <value>Set value</value>
  </data>
  <data name="TrueToString" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="TS" xml:space="preserve">
    <value>DateTimeStamp</value>
  </data>
  <data name="User" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="UserAssembler" xml:space="preserve">
    <value>Assembler</value>
  </data>
  <data name="UserCredentials" xml:space="preserve">
    <value>User credentials</value>
  </data>
  <data name="UserIisNotAnApplicationUser" xml:space="preserve">
    <value>User '{0}' is not an application user '{1}'</value>
  </data>
  <data name="LastTS" xml:space="preserve">
    <value>LastTimeStamp</value>
  </data>
  <data name="LinksCount" xml:space="preserve">
    <value>Links count</value>
  </data>
  <data name="StatisticsByJobs" xml:space="preserve">
    <value>Statistics by jobs</value>
  </data>
  <data name="ManualEntryGroupName" xml:space="preserve">
    <value>Manual entry a Job</value>
  </data>
  <data name="NoData" xml:space="preserve">
    <value>No data</value>
  </data>
  <data name="Print" xml:space="preserve">
    <value>Print</value>
  </data>
  <data name="ShownLinksCount" xml:space="preserve">
    <value>Shown links count {0} of {1} {2}</value>
  </data>
  <data name="SelectingWayToSearchGroupName" xml:space="preserve">
    <value>Selecting a way to search a GroupName</value>
  </data>
  <data name="ByGroupNameList" xml:space="preserve">
    <value>By GroupName list</value>
  </data>
  <data name="ByPackageSerialNum" xml:space="preserve">
    <value>By package serial num</value>
  </data>
  <data name="ManualEntryPackage" xml:space="preserve">
    <value>Manual entry a package</value>
  </data>
  <data name="SerialNumber" xml:space="preserve">
    <value>Serial number</value>
  </data>
  <data name="ValueIsNotInteger" xml:space="preserve">
    <value>The value is not a number.</value>
  </data>
  <data name="ValueOutOfRange" xml:space="preserve">
    <value>Value out of range. Valid values ​​are defined in system 0502 'Print Labels'.</value>
  </data>
  <data name="AssemblyExists" xml:space="preserve">
    <value>An assembly with this serial number already exists.</value>
  </data>
  <data name="LotNotIssuedToJob" xml:space="preserve">
    <value>Not issued from the lots: {0} to job '{1}'.</value>
  </data>
  <data name="DeviceCodeisUsed" xml:space="preserve">
    <value>Semiconductor element with this number was assembled earlier. You cannot reuse semiconductor element with this number.</value>
  </data>
  <data name="DescriptionWrongFormat" xml:space="preserve">
    <value>Description have wrong format</value>
  </data>
</root>