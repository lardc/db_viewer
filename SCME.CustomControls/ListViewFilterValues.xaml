<ListView x:Class="SCME.CustomControls.ListViewFilterValues"
          xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
          xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
          xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
          xmlns:common="clr-namespace:SCME.Common;assembly=Common"
          xmlns:local="clr-namespace:SCME.CustomControls">

    <ListView.Resources>
        <common:ObjectToBoolConverter x:Key="OBJ2B"/>
        
        <Style x:Key="delFilterPath" TargetType="Path">
            <Setter Property="Margin" Value="7"/>
            <Setter Property="Data" Value="M 0 0 L 20 20 M 0 20 L 20 0"/>
            <Setter Property="StrokeThickness" Value="2"/>
            <Setter Property="Stroke" Value="Red"/>
            <Setter Property="Stretch" Value="Uniform"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
        </Style>

        <Style x:Key="ButtonDateTimePickerOpenPath" TargetType="Path">
            <Setter Property="Data" Value="M 0 11 L 22 11"/>
            <Setter Property="StrokeThickness" Value="10"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Stroke" Value="White"/>
            <Setter Property="Stretch" Value="Uniform"/>
        </Style>
        
        <local:FilterValuesDataTemplateDictionary x:Key="filterValuesDataTemplateDictionary">
            <DataTemplate DataType="local:FilterValue" x:Key="listOfStringValuesTemplate">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Button x:Name="BtDeleteSelectedItem" Grid.Column="0" Height="27" Width="{Binding ElementName=BtDeleteSelectedItem, Path=ActualHeight}"
                            Click="BtDeleteSelectedItem_Click" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}">
                        <Path Style="{StaticResource delFilterPath}"/>
                    </Button>

                    <TextBox x:Name="TbStringValue" Grid.Column="1" FontSize="14" VerticalContentAlignment="Center" Text="{Binding Path=Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                </Grid>
            </DataTemplate>

            <DataTemplate DataType="local:FilterValue" x:Key="listOfComboBoxStringValuesTemplate">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Button x:Name="BtDeleteSelectedItem" Grid.Column="0" Height="27" Width="{Binding ElementName=BtDeleteSelectedItem, Path=ActualHeight}"
                            Click="BtDeleteSelectedItem_Click" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}">
                        <Path Style="{StaticResource delFilterPath}"/>
                    </Button>

                    <ComboBox x:Name="CmbListOfStringValues" Grid.Column="1" FontSize="14" VerticalContentAlignment="Center" ItemsSource="{Binding Path=FilterDescription.ListOfValues}" Text="{Binding Path=Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                </Grid>
            </DataTemplate>

            <DataTemplate DataType="local:FilterValue" x:Key="listOfDateValuesTemplate">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Button x:Name="BtDeleteSelectedItem" Grid.Column="0" Height="27" Width="{Binding ElementName=BtDeleteSelectedItem, Path=ActualHeight}"
                            Click="BtDeleteSelectedItem_Click" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}">
                        <Path Style="{StaticResource delFilterPath}"/>
                    </Button>

                    <local:DatePickerCustom Grid.Column="1" FontSize="14" Text="{Binding Path=Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat=dd.MM.yyyy}"/>
                </Grid>
            </DataTemplate>
            
            <DataTemplate DataType="local:FilterValue" x:Key="listOfDateTimeValuesTemplate">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Button x:Name="BtDeleteSelectedItem" Grid.Column="0" Height="27" Width="{Binding ElementName=BtDeleteSelectedItem, Path=ActualHeight}"
                            Click="BtDeleteSelectedItem_Click" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}">
                        <Path Style="{StaticResource delFilterPath}"/>
                    </Button>

                    <local:DatePickerCustom Grid.Column="1" FontSize="14" Text="{Binding Path=Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat=dd.MM.yyyy}"/>

                    <Grid Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>

                        <!-- не нашёл настройку отображения кнопки вызова отображения календаря DateTimePicker справа, прижатой к правой стороне формы
                             поэтому выключил отображение стандартной кнопки вызова календаря и сделал свою -->
                        <xctk:DateTimePicker x:Name="DtPicker" Grid.Column="0" FontSize="14" HorizontalAlignment="Left" TimePickerVisibility="Visible" ShowButtonSpinner="False" ShowDropDownButton="False" TimePickerShowButtonSpinner="False" BorderThickness="0" Format="Custom" FormatString="dd.MM.yyyy HH:mm:ss" TimeFormat="LongTime" Value="{Binding Path=Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat=dd.MM.yyyy HH:mm:ss}"/>

                        <Button x:Name="BtDateTimePicker" Grid.Column="1" Margin="0,0,5,0" Height="22" Width="24" Tag="{Binding ElementName=DtPicker}" Click="BtDateTimePickerClick">
                            <Path Style="{StaticResource ButtonDateTimePickerOpenPath}"/>
                        </Button>

                        <Rectangle Grid.Column="0" Grid.ColumnSpan="2" Stroke="Gray" StrokeThickness="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                    </Grid>
                </Grid>
            </DataTemplate>

            <DataTemplate DataType="local:FilterValue" x:Key="listOfIntValuesTemplate">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Button x:Name="BtDeleteSelectedItem" Grid.Column="0" Height="27" Width="{Binding ElementName=BtDeleteSelectedItem, Path=ActualHeight}"
                            Click="BtDeleteSelectedItem_Click" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}">
                        <Path Style="{StaticResource delFilterPath}"/>
                    </Button>

                    <TextBox Grid.Column="1" FontSize="14" VerticalContentAlignment="Center" Text="{Binding Path=Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" PreviewTextInput="TbOnlyNumeric_PreviewTextInput" DataObject.Pasting="TbOnlyNumericPaste" PreviewKeyDown="TbDisableSpace_PreviewKeyDown"/>
                </Grid>
            </DataTemplate>

            <DataTemplate DataType="local:FilterValue" x:Key="listOfDoubleValuesTemplate">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Button x:Name="BtDeleteSelectedItem" Grid.Column="0" Height="27" Width="{Binding ElementName=BtDeleteSelectedItem, Path=ActualHeight}"
                            Click="BtDeleteSelectedItem_Click" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}">
                        <Path Style="{StaticResource delFilterPath}"/>
                    </Button>

                    <TextBox Grid.Column="1" FontSize="14" VerticalContentAlignment="Center" Text="{Binding Path=Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" PreviewTextInput="TbOnlyDouble_PreviewTextInput" DataObject.Pasting="TbOnlyDoublePaste" PreviewKeyDown="TbDisableSpace_PreviewKeyDown"/>
                </Grid>
            </DataTemplate>

            <DataTemplate DataType="local:FilterValue" x:Key="listOfBoolValuesTemplate">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Button x:Name="BtDeleteSelectedItem" Grid.Column="0" Height="27" Width="{Binding ElementName=BtDeleteSelectedItem, Path=ActualHeight}"
                            Click="BtDeleteSelectedItem_Click" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}">
                        <Path Style="{StaticResource delFilterPath}"/>
                    </Button>

                    <CheckBox Grid.Column="0" Grid.ColumnSpan="2" IsThreeState="False" IsChecked="{Binding Path=Value, Converter={StaticResource OBJ2B}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <CheckBox.LayoutTransform>
                            <ScaleTransform ScaleX="2" ScaleY="2"/>
                        </CheckBox.LayoutTransform>
                    </CheckBox>
                </Grid>
            </DataTemplate>
        </local:FilterValuesDataTemplateDictionary>
    </ListView.Resources>

    <ListView.ItemContainerStyle>
        <Style TargetType="ListViewItem">
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <ContentPresenter/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </ListView.ItemContainerStyle>

    <ListView.ItemTemplateSelector>
        <local:FilterValuesTemplateSelectorExt TemplateDictionary="{StaticResource filterValuesDataTemplateDictionary}"/>
    </ListView.ItemTemplateSelector>
</ListView>
